# disable some of rafi's plugins I don't care about
- { repo: norcalli/nvim-colorizer.lua, if: 0 }
- { repo: t9md/vim-choosewin, if: 0 }
- { repo: mattn/emmet-vim, if: 0 }
- { repo: olimorris/persisted.nvim,  if: 0 }

- repo: Wansmer/treesj
  on_source: nvim-treesitter
  hook_source: lua require('treesj').setup({ use_default_keymaps = false })

- repo: stevearc/oil.nvim
  on_cmd: Oil
  hook_source: lua require('oil').setup({ keymaps = { ["<C-s>"] = false } })

- repo: tpope/vim-repeat

# use vim-illuminate over vim-cursorword
- { repo: itchyny/vim-cursorword, if: 0 }
- repo: RRethy/vim-illuminate
  merged: 0
  hook_source: lua require('illuminate').configure({ under_cursor = false, providers = { 'lsp' } })

- repo: chaoren/vim-wordmotion

# my completion sources
- { repo: hrsh7th/cmp-calc, on_source: nvim-cmp }

- repo: jose-elias-alvarez/typescript.nvim
  on_source: nvim-lspconfig

- repo: Valodim/fidget.nvim
  on_source: nvim-lspconfig
  hook_source: lua require('plugins.fidget')
- repo: folke/twilight.nvim
  on_cmd: ['Twilight', 'TwilightEnable', 'TwilightDisable']
  hook_source: lua require('plugins.twilight')

- { repo: wellle/targets.vim, on_event: [ CursorMoved ] }

# add my own
- repo: tpope/vim-unimpaired

# use lightspeed over vim-shot-f
- { repo: deris/vim-shot-f, if: 0 }
- { repo: ggandor/lightspeed.nvim, on_map: { n: ['s', 'S', 'f', 't', 'F', 'T'] } }

- repo: kana/vim-altr
  on_map: { n: <Plug> }
  hook_source: |-
    call altr#define('%.ts', '%.test.ts')
    call altr#define('%.tsx', '%.stories.tsx', '%.module.css')
    call altr#define('protos/%.proto', 'domain/%.go', 'domain/%_test.go')
    call altr#define('%.up.sql', '%.down.sql')
    call altr#define('%.po', 'en/messages.po', 'de/messages.po')

- { repo: LnL7/vim-nix, on_ft: nix }

- repo: arthurxavierx/vim-caser
  on_map: { nx: ',c' }
  hook_add: |-
    let g:caser_prefix = ',c'

- repo: rhysd/conflict-marker.vim
  hook_add: |-
    let g:conflict_marker_enable_mappings = 0
    let g:conflict_marker_enable_matchit = 0

- repo: debugloop/telescope-undo.nvim
  depends: [ plenary.nvim, telescope.nvim ]
  on_lua: telescope
  hook_post_source: lua require('telescope').load_extension('undo')
